{
	"info": {
		"_postman_id": "cf9ff6d5-e8fc-4870-8c63-b5a8ddbe78cc",
		"name": "Ciudad-Supermercado",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17226264"
	},
	"item": [
		{
			"name": "Crear una ciudad válida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"ciudadId\", data.ciudadId);\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Buenos Aires\",\r\n    \"pais\": \"Argentina\",\r\n    \"num_habitantes\": 45000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un supermercado válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"supermercadoId_1\", data.supermercadoId);\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Supermercado Pepito\",\r\n    \"longitud\": 13546512,\r\n    \"latitud\": 45000,\r\n    \"paginaWeb\": \"www.superpepito.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un supermercado válido Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"supermercadoId_2\", data.supermercadoId);\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Supermercado Pepita\",\r\n    \"longitud\": 333,\r\n    \"latitud\": 222,\r\n    \"paginaWeb\": \"www.superpepita.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un nuevo supermercado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudadId}}/supermarkets/{{supermercadoId_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudadId}}",
						"supermarkets",
						"{{supermercadoId_1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un supermercado que no existe a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id proporcionado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudadId}}/supermarkets/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudadId}}",
						"supermarkets",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los supermercados que pertenecen a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudadId}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudadId}}",
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudadId}}/supermarkets/{{supermercadoId_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudadId}}",
						"supermarkets",
						"{{supermercadoId_1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar los supermercados que están asociados a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n    \"supermercadoId\": \"{{supermercadoId_2}}\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudadId}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudadId}}",
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar los supermercados asociados a una ciudad, con un supermercado inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id proporcionado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"supermercadoId\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudadId}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudadId}}",
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado que no estaba previamente asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado no está asociado a la ciudad\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudadId}}/supermarkets/{{supermercadoId_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudadId}}",
						"supermarkets",
						"{{supermercadoId_1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudadId}}/supermarkets/{{supermercadoId_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudadId}}",
						"supermarkets",
						"{{supermercadoId_2}}"
					]
				}
			},
			"response": []
		}
	]
}